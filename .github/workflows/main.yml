name: CI

on: [ push, pull_request ]

permissions:
  actions: read
  checks: read
  contents: read
  deployments: write
  issues: read
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: none
  statuses: read

jobs:
  lockfile-lint:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node: [ '14' ]
    name: Lockfile lint ${{ matrix.node }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: lint lock file
        run: npx lockfile-lint --path package-lock.json --allowed-hosts npm --validate-https

  test:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node: [ '10', '12', '14' ]
    needs: lockfile-lint
    name: Unit Tests Node ${{ matrix.node }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Units Tests + Prepare Coveralls
        run: npm run coveralls
      - name: Coveralls
        uses: coverallsapp/github-action@master
        if: matrix.node == '14'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: do semantic release
    needs: lockfile-lint
    runs-on: 'ubuntu-latest'
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: install dependencies
        run: npm ci --ignore-scripts
      - name: release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
